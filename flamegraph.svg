<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="918" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="901.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="901.00"> </text><svg id="frames" x="10" width="1180"><g><title>libdyld.dylib`tlv_get_addr (42 samples, 0.06%)</title><rect x="0.0015%" y="789" width="0.0644%" height="15" fill="rgb(227,0,7)"/><text x="0.2515%" y="799.50"></text></g><g><title>ray-tracing-weekend`core::fmt::write (12 samples, 0.02%)</title><rect x="0.0690%" y="789" width="0.0184%" height="15" fill="rgb(217,0,24)"/><text x="0.3190%" y="799.50"></text></g><g><title>ray-tracing-weekend`rand::rng::Rng::gen (7 samples, 0.01%)</title><rect x="0.0873%" y="789" width="0.0107%" height="15" fill="rgb(221,193,54)"/><text x="0.3373%" y="799.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.02%)</title><rect x="0.5624%" y="773" width="0.0153%" height="15" fill="rgb(248,212,6)"/><text x="0.8124%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (32 samples, 0.05%)</title><rect x="0.5777%" y="773" width="0.0490%" height="15" fill="rgb(208,68,35)"/><text x="0.8277%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.03%)</title><rect x="0.6268%" y="773" width="0.0306%" height="15" fill="rgb(232,128,0)"/><text x="0.8768%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (29 samples, 0.04%)</title><rect x="0.6574%" y="773" width="0.0444%" height="15" fill="rgb(207,160,47)"/><text x="0.9074%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.01%)</title><rect x="0.6880%" y="757" width="0.0138%" height="15" fill="rgb(228,23,34)"/><text x="0.9380%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (22 samples, 0.03%)</title><rect x="0.7018%" y="773" width="0.0337%" height="15" fill="rgb(218,30,26)"/><text x="0.9518%" y="783.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (1,386 samples, 2.12%)</title><rect x="0.7708%" y="773" width="2.1239%" height="15" fill="rgb(220,122,19)"/><text x="1.0208%" y="783.50">r..</text></g><g><title>ray-tracing-weekend`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (11 samples, 0.02%)</title><rect x="2.9116%" y="757" width="0.0169%" height="15" fill="rgb(250,228,42)"/><text x="3.1616%" y="767.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="2.9162%" y="741" width="0.0123%" height="15" fill="rgb(240,193,28)"/><text x="3.1662%" y="751.50"></text></g><g><title>ray-tracing-weekend`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (26 samples, 0.04%)</title><rect x="2.9529%" y="725" width="0.0398%" height="15" fill="rgb(216,20,37)"/><text x="3.2029%" y="735.50"></text></g><g><title>ray-tracing-weekend`alloc::raw_vec::finish_grow (22 samples, 0.03%)</title><rect x="2.9591%" y="709" width="0.0337%" height="15" fill="rgb(206,188,39)"/><text x="3.2091%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`realloc (14 samples, 0.02%)</title><rect x="2.9713%" y="693" width="0.0215%" height="15" fill="rgb(217,207,13)"/><text x="3.2213%" y="703.50"></text></g><g><title>ray-tracing-weekend`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (32 samples, 0.05%)</title><rect x="2.9483%" y="741" width="0.0490%" height="15" fill="rgb(231,73,38)"/><text x="3.1983%" y="751.50"></text></g><g><title>ray-tracing-weekend`core::fmt::write (66 samples, 0.10%)</title><rect x="2.9054%" y="773" width="0.1011%" height="15" fill="rgb(225,20,46)"/><text x="3.1554%" y="783.50"></text></g><g><title>ray-tracing-weekend`core::fmt::num::imp::_&lt;impl core::fmt::Display for u8&gt;::fmt (50 samples, 0.08%)</title><rect x="2.9300%" y="757" width="0.0766%" height="15" fill="rgb(210,31,41)"/><text x="3.1800%" y="767.50"></text></g><g><title>ray-tracing-weekend`core::ptr::drop_in_place&lt;std::sync::once::Once::call_once&lt;rand::rngs::adapter::reseeding::fork::register_fork_handler::{{closure}}&gt;::{{closure}}&gt; (31 samples, 0.05%)</title><rect x="3.0066%" y="773" width="0.0475%" height="15" fill="rgb(221,200,47)"/><text x="3.2566%" y="783.50"></text></g><g><title>ray-tracing-weekend`rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed_and_generate (14 samples, 0.02%)</title><rect x="3.1016%" y="757" width="0.0215%" height="15" fill="rgb(226,26,5)"/><text x="3.3516%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`getentropy (13 samples, 0.02%)</title><rect x="3.1031%" y="741" width="0.0199%" height="15" fill="rgb(249,33,26)"/><text x="3.3531%" y="751.50"></text></g><g><title>ray-tracing-weekend`rand::rng::Rng::gen (87 samples, 0.13%)</title><rect x="3.0541%" y="773" width="0.1333%" height="15" fill="rgb(235,183,28)"/><text x="3.3041%" y="783.50"></text></g><g><title>ray-tracing-weekend`rand_chacha::guts::refill_wide::impl_avx2 (40 samples, 0.06%)</title><rect x="3.1261%" y="757" width="0.0613%" height="15" fill="rgb(221,5,38)"/><text x="3.3761%" y="767.50"></text></g><g><title>libsystem_m.dylib`0x00007fff2a4ff240 (119 samples, 0.18%)</title><rect x="6.9387%" y="757" width="0.1824%" height="15" fill="rgb(247,18,42)"/><text x="7.1887%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="7.1211%" y="757" width="0.0107%" height="15" fill="rgb(241,131,45)"/><text x="7.3711%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (161 samples, 0.25%)</title><rect x="7.2927%" y="741" width="0.2467%" height="15" fill="rgb(249,31,29)"/><text x="7.5427%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (147 samples, 0.23%)</title><rect x="7.3142%" y="725" width="0.2253%" height="15" fill="rgb(225,111,53)"/><text x="7.5642%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free (267 samples, 0.41%)</title><rect x="7.1395%" y="757" width="0.4092%" height="15" fill="rgb(238,160,17)"/><text x="7.3895%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (73 samples, 0.11%)</title><rect x="8.2075%" y="725" width="0.1119%" height="15" fill="rgb(214,148,48)"/><text x="8.4575%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (541 samples, 0.83%)</title><rect x="7.5486%" y="757" width="0.8290%" height="15" fill="rgb(232,36,49)"/><text x="7.7986%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (275 samples, 0.42%)</title><rect x="7.9562%" y="741" width="0.4214%" height="15" fill="rgb(209,103,24)"/><text x="8.2062%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (38 samples, 0.06%)</title><rect x="8.3194%" y="725" width="0.0582%" height="15" fill="rgb(229,88,8)"/><text x="8.5694%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`malloc (13 samples, 0.02%)</title><rect x="8.3776%" y="757" width="0.0199%" height="15" fill="rgb(213,181,19)"/><text x="8.6276%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (8 samples, 0.01%)</title><rect x="8.3976%" y="757" width="0.0123%" height="15" fill="rgb(254,191,54)"/><text x="8.6476%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (22 samples, 0.03%)</title><rect x="8.4098%" y="757" width="0.0337%" height="15" fill="rgb(241,83,37)"/><text x="8.6598%" y="767.50"></text></g><g><title>ray-tracing-weekend`rand::rng::Rng::gen (9 samples, 0.01%)</title><rect x="8.5784%" y="741" width="0.0138%" height="15" fill="rgb(233,36,39)"/><text x="8.8284%" y="751.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::material::Dielectric as ray_tracing_weekend::material::Material&gt;::scatter (96 samples, 0.15%)</title><rect x="8.4466%" y="757" width="0.1471%" height="15" fill="rgb(226,3,54)"/><text x="8.6966%" y="767.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.01%)</title><rect x="8.6167%" y="741" width="0.0138%" height="15" fill="rgb(245,192,40)"/><text x="8.8667%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`getentropy (10 samples, 0.02%)</title><rect x="8.7178%" y="693" width="0.0153%" height="15" fill="rgb(238,167,29)"/><text x="8.9678%" y="703.50"></text></g><g><title>ray-tracing-weekend`rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed_and_generate (11 samples, 0.02%)</title><rect x="8.7178%" y="709" width="0.0169%" height="15" fill="rgb(232,182,51)"/><text x="8.9678%" y="719.50"></text></g><g><title>ray-tracing-weekend`rand::rng::Rng::gen (46 samples, 0.07%)</title><rect x="8.6964%" y="725" width="0.0705%" height="15" fill="rgb(231,60,39)"/><text x="8.9464%" y="735.50"></text></g><g><title>ray-tracing-weekend`rand_chacha::guts::refill_wide::impl_avx2 (18 samples, 0.03%)</title><rect x="8.7393%" y="709" width="0.0276%" height="15" fill="rgb(208,69,12)"/><text x="8.9893%" y="719.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::material::Lambertian as ray_tracing_weekend::material::Material&gt;::scatter (114 samples, 0.17%)</title><rect x="8.5937%" y="757" width="0.1747%" height="15" fill="rgb(235,93,37)"/><text x="8.8437%" y="767.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::vec3::Vec3::random_in_unit_sphere (86 samples, 0.13%)</title><rect x="8.6366%" y="741" width="0.1318%" height="15" fill="rgb(213,116,39)"/><text x="8.8866%" y="751.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.02%)</title><rect x="8.8757%" y="741" width="0.0153%" height="15" fill="rgb(222,207,29)"/><text x="9.1257%" y="751.50"></text></g><g><title>ray-tracing-weekend`rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed_and_generate (24 samples, 0.04%)</title><rect x="9.0856%" y="709" width="0.0368%" height="15" fill="rgb(206,96,30)"/><text x="9.3356%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`getentropy (24 samples, 0.04%)</title><rect x="9.0856%" y="693" width="0.0368%" height="15" fill="rgb(218,138,4)"/><text x="9.3356%" y="703.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::material::Metal as ray_tracing_weekend::material::Material&gt;::scatter (287 samples, 0.44%)</title><rect x="8.7684%" y="757" width="0.4398%" height="15" fill="rgb(250,191,14)"/><text x="9.0184%" y="767.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::vec3::Vec3::random_in_unit_sphere (204 samples, 0.31%)</title><rect x="8.8956%" y="741" width="0.3126%" height="15" fill="rgb(239,60,40)"/><text x="9.1456%" y="751.50"></text></g><g><title>ray-tracing-weekend`rand::rng::Rng::gen (106 samples, 0.16%)</title><rect x="9.0458%" y="725" width="0.1624%" height="15" fill="rgb(206,27,48)"/><text x="9.2958%" y="735.50"></text></g><g><title>ray-tracing-weekend`rand_chacha::guts::refill_wide::impl_avx2 (50 samples, 0.08%)</title><rect x="9.1316%" y="709" width="0.0766%" height="15" fill="rgb(225,35,8)"/><text x="9.3816%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (31 samples, 0.05%)</title><rect x="37.8166%" y="693" width="0.0475%" height="15" fill="rgb(250,213,24)"/><text x="38.0666%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (651 samples, 1.00%)</title><rect x="37.0964%" y="725" width="0.9976%" height="15" fill="rgb(247,123,22)"/><text x="37.3464%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (593 samples, 0.91%)</title><rect x="37.1853%" y="709" width="0.9087%" height="15" fill="rgb(231,138,38)"/><text x="37.4353%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (150 samples, 0.23%)</title><rect x="37.8641%" y="693" width="0.2299%" height="15" fill="rgb(231,145,46)"/><text x="38.1141%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (13 samples, 0.02%)</title><rect x="38.0741%" y="677" width="0.0199%" height="15" fill="rgb(251,118,11)"/><text x="38.3241%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (754 samples, 1.16%)</title><rect x="36.9493%" y="741" width="1.1554%" height="15" fill="rgb(217,147,25)"/><text x="37.1993%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="38.0940%" y="725" width="0.0107%" height="15" fill="rgb(247,81,37)"/><text x="38.3440%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (43 samples, 0.07%)</title><rect x="38.1047%" y="741" width="0.0659%" height="15" fill="rgb(209,12,38)"/><text x="38.3547%" y="751.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (18,907 samples, 28.97%)</title><rect x="9.2082%" y="757" width="28.9731%" height="15" fill="rgb(227,1,9)"/><text x="9.4582%" y="767.50">ray-tracing-weekend`&lt;ray_tracing_weekend::spher..</text></g><g><title>ray-tracing-weekend`core::ptr::drop_in_place&lt;std::sync::once::Once::call_once&lt;rand::rngs::adapter::reseeding::fork::register_fork_handler::{{closure}}&gt;::{{closure}}&gt; (21 samples, 0.03%)</title><rect x="38.1813%" y="757" width="0.0322%" height="15" fill="rgb(248,47,43)"/><text x="38.4313%" y="767.50"></text></g><g><title>libsystem_m.dylib`0x00007fff2a4ff240 (78 samples, 0.12%)</title><rect x="41.7917%" y="741" width="0.1195%" height="15" fill="rgb(221,10,30)"/><text x="42.0417%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (43 samples, 0.07%)</title><rect x="41.9863%" y="725" width="0.0659%" height="15" fill="rgb(210,229,1)"/><text x="42.2363%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (35 samples, 0.05%)</title><rect x="41.9986%" y="709" width="0.0536%" height="15" fill="rgb(222,148,37)"/><text x="42.2486%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free (86 samples, 0.13%)</title><rect x="41.9219%" y="741" width="0.1318%" height="15" fill="rgb(234,67,33)"/><text x="42.1719%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (43 samples, 0.07%)</title><rect x="42.3311%" y="709" width="0.0659%" height="15" fill="rgb(247,98,35)"/><text x="42.5811%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (237 samples, 0.36%)</title><rect x="42.0537%" y="741" width="0.3632%" height="15" fill="rgb(247,138,52)"/><text x="42.3037%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (135 samples, 0.21%)</title><rect x="42.2100%" y="725" width="0.2069%" height="15" fill="rgb(213,79,30)"/><text x="42.4600%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (13 samples, 0.02%)</title><rect x="42.3970%" y="709" width="0.0199%" height="15" fill="rgb(246,177,23)"/><text x="42.6470%" y="719.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::material::Dielectric as ray_tracing_weekend::material::Material&gt;::scatter (81 samples, 0.12%)</title><rect x="42.4322%" y="741" width="0.1241%" height="15" fill="rgb(230,62,27)"/><text x="42.6822%" y="751.50"></text></g><g><title>ray-tracing-weekend`rand::rng::Rng::gen (9 samples, 0.01%)</title><rect x="42.5426%" y="725" width="0.0138%" height="15" fill="rgb(216,154,8)"/><text x="42.7926%" y="735.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::material::Lambertian as ray_tracing_weekend::material::Material&gt;::scatter (46 samples, 0.07%)</title><rect x="42.5564%" y="741" width="0.0705%" height="15" fill="rgb(244,35,45)"/><text x="42.8064%" y="751.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::vec3::Vec3::random_in_unit_sphere (29 samples, 0.04%)</title><rect x="42.5824%" y="725" width="0.0444%" height="15" fill="rgb(251,115,12)"/><text x="42.8324%" y="735.50"></text></g><g><title>ray-tracing-weekend`rand::rng::Rng::gen (11 samples, 0.02%)</title><rect x="42.6100%" y="709" width="0.0169%" height="15" fill="rgb(240,54,50)"/><text x="42.8600%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (8 samples, 0.01%)</title><rect x="69.5619%" y="677" width="0.0123%" height="15" fill="rgb(233,84,52)"/><text x="69.8119%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (275 samples, 0.42%)</title><rect x="69.2998%" y="709" width="0.4214%" height="15" fill="rgb(207,117,47)"/><text x="69.5498%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (261 samples, 0.40%)</title><rect x="69.3213%" y="693" width="0.4000%" height="15" fill="rgb(249,43,39)"/><text x="69.5713%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (96 samples, 0.15%)</title><rect x="69.5741%" y="677" width="0.1471%" height="15" fill="rgb(209,38,44)"/><text x="69.8241%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (15 samples, 0.02%)</title><rect x="69.6983%" y="661" width="0.0230%" height="15" fill="rgb(236,212,23)"/><text x="69.9483%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (315 samples, 0.48%)</title><rect x="69.2416%" y="725" width="0.4827%" height="15" fill="rgb(242,79,21)"/><text x="69.4916%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (12 samples, 0.02%)</title><rect x="69.7243%" y="725" width="0.0184%" height="15" fill="rgb(211,96,35)"/><text x="69.9743%" y="735.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (17,695 samples, 27.12%)</title><rect x="42.6314%" y="741" width="27.1159%" height="15" fill="rgb(253,215,40)"/><text x="42.8814%" y="751.50">ray-tracing-weekend`&lt;ray_tracing_weekend::s..</text></g><g><title>ray-tracing-weekend`core::ptr::drop_in_place&lt;std::sync::once::Once::call_once&lt;rand::rngs::adapter::reseeding::fork::register_fork_handler::{{closure}}&gt;::{{closure}}&gt; (7 samples, 0.01%)</title><rect x="69.7488%" y="741" width="0.0107%" height="15" fill="rgb(211,81,21)"/><text x="69.9988%" y="751.50"></text></g><g><title>libsystem_m.dylib`0x00007fff2a4ff240 (12 samples, 0.02%)</title><rect x="70.9043%" y="725" width="0.0184%" height="15" fill="rgb(208,190,38)"/><text x="71.1543%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (28 samples, 0.04%)</title><rect x="70.9686%" y="709" width="0.0429%" height="15" fill="rgb(235,213,38)"/><text x="71.2186%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (26 samples, 0.04%)</title><rect x="70.9717%" y="693" width="0.0398%" height="15" fill="rgb(237,122,38)"/><text x="71.2217%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free (55 samples, 0.08%)</title><rect x="70.9288%" y="725" width="0.0843%" height="15" fill="rgb(244,218,35)"/><text x="71.1788%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (24 samples, 0.04%)</title><rect x="71.1495%" y="693" width="0.0368%" height="15" fill="rgb(240,68,47)"/><text x="71.3995%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (118 samples, 0.18%)</title><rect x="71.0131%" y="725" width="0.1808%" height="15" fill="rgb(210,16,53)"/><text x="71.2631%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (70 samples, 0.11%)</title><rect x="71.0866%" y="709" width="0.1073%" height="15" fill="rgb(235,124,12)"/><text x="71.3366%" y="719.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::material::Dielectric as ray_tracing_weekend::material::Material&gt;::scatter (19 samples, 0.03%)</title><rect x="71.2046%" y="725" width="0.0291%" height="15" fill="rgb(224,169,11)"/><text x="71.4546%" y="735.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (15 samples, 0.02%)</title><rect x="71.2720%" y="709" width="0.0230%" height="15" fill="rgb(250,166,2)"/><text x="71.5220%" y="719.50"></text></g><g><title>ray-tracing-weekend`rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed_and_generate (13 samples, 0.02%)</title><rect x="71.4238%" y="677" width="0.0199%" height="15" fill="rgb(242,216,29)"/><text x="71.6738%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`getentropy (13 samples, 0.02%)</title><rect x="71.4238%" y="661" width="0.0199%" height="15" fill="rgb(230,116,27)"/><text x="71.6738%" y="671.50"></text></g><g><title>ray-tracing-weekend`rand::rng::Rng::gen (55 samples, 0.08%)</title><rect x="71.4008%" y="693" width="0.0843%" height="15" fill="rgb(228,99,48)"/><text x="71.6508%" y="703.50"></text></g><g><title>ray-tracing-weekend`rand_chacha::guts::refill_wide::impl_avx2 (22 samples, 0.03%)</title><rect x="71.4513%" y="677" width="0.0337%" height="15" fill="rgb(253,11,6)"/><text x="71.7013%" y="687.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::material::Lambertian as ray_tracing_weekend::material::Material&gt;::scatter (165 samples, 0.25%)</title><rect x="71.2337%" y="725" width="0.2528%" height="15" fill="rgb(247,143,39)"/><text x="71.4837%" y="735.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::vec3::Vec3::random_in_unit_sphere (120 samples, 0.18%)</title><rect x="71.3027%" y="709" width="0.1839%" height="15" fill="rgb(236,97,10)"/><text x="71.5527%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (14 samples, 0.02%)</title><rect x="80.6871%" y="661" width="0.0215%" height="15" fill="rgb(233,208,19)"/><text x="80.9371%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (133 samples, 0.20%)</title><rect x="80.5400%" y="693" width="0.2038%" height="15" fill="rgb(216,164,2)"/><text x="80.7900%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (122 samples, 0.19%)</title><rect x="80.5569%" y="677" width="0.1870%" height="15" fill="rgb(220,129,5)"/><text x="80.8069%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (23 samples, 0.04%)</title><rect x="80.7086%" y="661" width="0.0352%" height="15" fill="rgb(242,17,10)"/><text x="80.9586%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (153 samples, 0.23%)</title><rect x="80.5109%" y="709" width="0.2345%" height="15" fill="rgb(242,107,0)"/><text x="80.7609%" y="719.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (6,043 samples, 9.26%)</title><rect x="71.4927%" y="725" width="9.2603%" height="15" fill="rgb(251,28,31)"/><text x="71.7427%" y="735.50">ray-tracing-w..</text></g><g><title>libsystem_m.dylib`0x00007fff2a4ff240 (8 samples, 0.01%)</title><rect x="81.6771%" y="709" width="0.0123%" height="15" fill="rgb(233,223,10)"/><text x="81.9271%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (18 samples, 0.03%)</title><rect x="81.7138%" y="693" width="0.0276%" height="15" fill="rgb(215,21,27)"/><text x="81.9638%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (16 samples, 0.02%)</title><rect x="81.7169%" y="677" width="0.0245%" height="15" fill="rgb(232,23,21)"/><text x="81.9669%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free (33 samples, 0.05%)</title><rect x="81.6939%" y="709" width="0.0506%" height="15" fill="rgb(244,5,23)"/><text x="81.9439%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.01%)</title><rect x="81.7966%" y="677" width="0.0107%" height="15" fill="rgb(226,81,46)"/><text x="82.0466%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (43 samples, 0.07%)</title><rect x="81.7445%" y="709" width="0.0659%" height="15" fill="rgb(247,70,30)"/><text x="81.9945%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (25 samples, 0.04%)</title><rect x="81.7721%" y="693" width="0.0383%" height="15" fill="rgb(212,68,19)"/><text x="82.0221%" y="703.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.01%)</title><rect x="81.8334%" y="693" width="0.0138%" height="15" fill="rgb(240,187,13)"/><text x="82.0834%" y="703.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::material::Lambertian as ray_tracing_weekend::material::Material&gt;::scatter (58 samples, 0.09%)</title><rect x="81.8226%" y="709" width="0.0889%" height="15" fill="rgb(223,113,26)"/><text x="82.0726%" y="719.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::vec3::Vec3::random_in_unit_sphere (40 samples, 0.06%)</title><rect x="81.8502%" y="693" width="0.0613%" height="15" fill="rgb(206,192,2)"/><text x="82.1002%" y="703.50"></text></g><g><title>ray-tracing-weekend`rand::rng::Rng::gen (23 samples, 0.04%)</title><rect x="81.8763%" y="677" width="0.0352%" height="15" fill="rgb(241,108,4)"/><text x="82.1263%" y="687.50"></text></g><g><title>ray-tracing-weekend`rand_chacha::guts::refill_wide::impl_avx2 (12 samples, 0.02%)</title><rect x="81.8931%" y="661" width="0.0184%" height="15" fill="rgb(247,173,49)"/><text x="82.1431%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (61 samples, 0.09%)</title><rect x="89.3008%" y="677" width="0.0935%" height="15" fill="rgb(224,114,35)"/><text x="89.5508%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (55 samples, 0.08%)</title><rect x="89.3100%" y="661" width="0.0843%" height="15" fill="rgb(245,159,27)"/><text x="89.5600%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.01%)</title><rect x="89.3820%" y="645" width="0.0123%" height="15" fill="rgb(245,172,44)"/><text x="89.6320%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (73 samples, 0.11%)</title><rect x="89.2839%" y="693" width="0.1119%" height="15" fill="rgb(236,23,11)"/><text x="89.5339%" y="703.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (4,880 samples, 7.48%)</title><rect x="81.9192%" y="709" width="7.4781%" height="15" fill="rgb(205,117,38)"/><text x="82.1692%" y="719.50">ray-tracin..</text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.01%)</title><rect x="89.8279%" y="677" width="0.0123%" height="15" fill="rgb(237,72,25)"/><text x="90.0779%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.01%)</title><rect x="89.8294%" y="661" width="0.0107%" height="15" fill="rgb(244,70,9)"/><text x="90.0794%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.02%)</title><rect x="89.8172%" y="693" width="0.0245%" height="15" fill="rgb(217,125,39)"/><text x="90.0672%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (23 samples, 0.04%)</title><rect x="89.8417%" y="693" width="0.0352%" height="15" fill="rgb(235,36,10)"/><text x="90.0917%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (19 samples, 0.03%)</title><rect x="89.8478%" y="677" width="0.0291%" height="15" fill="rgb(251,123,47)"/><text x="90.0978%" y="687.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::material::Lambertian as ray_tracing_weekend::material::Material&gt;::scatter (33 samples, 0.05%)</title><rect x="89.8892%" y="693" width="0.0506%" height="15" fill="rgb(221,13,13)"/><text x="90.1392%" y="703.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::vec3::Vec3::random_in_unit_sphere (27 samples, 0.04%)</title><rect x="89.8984%" y="677" width="0.0414%" height="15" fill="rgb(238,131,9)"/><text x="90.1484%" y="687.50"></text></g><g><title>ray-tracing-weekend`rand::rng::Rng::gen (17 samples, 0.03%)</title><rect x="89.9137%" y="661" width="0.0261%" height="15" fill="rgb(211,50,8)"/><text x="90.1637%" y="671.50"></text></g><g><title>ray-tracing-weekend`rand_chacha::guts::refill_wide::impl_avx2 (7 samples, 0.01%)</title><rect x="89.9290%" y="645" width="0.0107%" height="15" fill="rgb(245,182,24)"/><text x="90.1790%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (55 samples, 0.08%)</title><rect x="93.0245%" y="677" width="0.0843%" height="15" fill="rgb(242,14,37)"/><text x="93.2745%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (52 samples, 0.08%)</title><rect x="93.0291%" y="661" width="0.0797%" height="15" fill="rgb(246,228,12)"/><text x="93.2791%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (48 samples, 0.07%)</title><rect x="93.0352%" y="645" width="0.0736%" height="15" fill="rgb(213,55,15)"/><text x="93.2852%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.02%)</title><rect x="93.0889%" y="629" width="0.0199%" height="15" fill="rgb(209,9,3)"/><text x="93.3389%" y="639.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (2,070 samples, 3.17%)</title><rect x="89.9413%" y="693" width="3.1721%" height="15" fill="rgb(230,59,30)"/><text x="90.1913%" y="703.50">ray..</text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.01%)</title><rect x="93.3509%" y="677" width="0.0123%" height="15" fill="rgb(209,121,21)"/><text x="93.6009%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.02%)</title><rect x="93.3632%" y="677" width="0.0215%" height="15" fill="rgb(220,109,13)"/><text x="93.6132%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="93.3739%" y="661" width="0.0107%" height="15" fill="rgb(232,18,1)"/><text x="93.6239%" y="671.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::material::Lambertian as ray_tracing_weekend::material::Material&gt;::scatter (21 samples, 0.03%)</title><rect x="93.3877%" y="677" width="0.0322%" height="15" fill="rgb(215,41,42)"/><text x="93.6377%" y="687.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::vec3::Vec3::random_in_unit_sphere (14 samples, 0.02%)</title><rect x="93.3984%" y="661" width="0.0215%" height="15" fill="rgb(224,123,36)"/><text x="93.6484%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.02%)</title><rect x="95.1561%" y="661" width="0.0169%" height="15" fill="rgb(240,125,3)"/><text x="95.4061%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="95.1622%" y="645" width="0.0107%" height="15" fill="rgb(205,98,50)"/><text x="95.4122%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="95.1622%" y="629" width="0.0107%" height="15" fill="rgb(205,185,37)"/><text x="95.4122%" y="639.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (1,143 samples, 1.75%)</title><rect x="93.4229%" y="677" width="1.7515%" height="15" fill="rgb(238,207,15)"/><text x="93.6729%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.01%)</title><rect x="95.3231%" y="661" width="0.0138%" height="15" fill="rgb(213,199,42)"/><text x="95.5731%" y="671.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::material::Lambertian as ray_tracing_weekend::material::Material&gt;::scatter (8 samples, 0.01%)</title><rect x="95.3400%" y="661" width="0.0123%" height="15" fill="rgb(235,201,11)"/><text x="95.5900%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.01%)</title><rect x="96.2441%" y="629" width="0.0138%" height="15" fill="rgb(207,46,11)"/><text x="96.4941%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.01%)</title><rect x="96.2441%" y="613" width="0.0138%" height="15" fill="rgb(241,35,35)"/><text x="96.4941%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.02%)</title><rect x="96.2380%" y="645" width="0.0215%" height="15" fill="rgb(243,32,47)"/><text x="96.4880%" y="655.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (593 samples, 0.91%)</title><rect x="95.3522%" y="661" width="0.9087%" height="15" fill="rgb(247,202,23)"/><text x="95.6022%" y="671.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::material::Lambertian as ray_tracing_weekend::material::Material&gt;::scatter (8 samples, 0.01%)</title><rect x="96.3559%" y="645" width="0.0123%" height="15" fill="rgb(219,102,11)"/><text x="96.6059%" y="655.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (349 samples, 0.53%)</title><rect x="96.3682%" y="645" width="0.5348%" height="15" fill="rgb(243,110,44)"/><text x="96.6182%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="96.8923%" y="629" width="0.0107%" height="15" fill="rgb(222,74,54)"/><text x="97.1423%" y="639.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (203 samples, 0.31%)</title><rect x="96.9490%" y="629" width="0.3111%" height="15" fill="rgb(216,99,12)"/><text x="97.1990%" y="639.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (136 samples, 0.21%)</title><rect x="97.2984%" y="613" width="0.2084%" height="15" fill="rgb(226,22,26)"/><text x="97.5484%" y="623.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (90 samples, 0.14%)</title><rect x="97.5374%" y="597" width="0.1379%" height="15" fill="rgb(217,163,10)"/><text x="97.7874%" y="607.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (70 samples, 0.11%)</title><rect x="97.6891%" y="581" width="0.1073%" height="15" fill="rgb(213,25,53)"/><text x="97.9391%" y="591.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (66 samples, 0.10%)</title><rect x="97.8087%" y="565" width="0.1011%" height="15" fill="rgb(252,105,26)"/><text x="98.0587%" y="575.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (40 samples, 0.06%)</title><rect x="97.9251%" y="549" width="0.0613%" height="15" fill="rgb(220,39,43)"/><text x="98.1751%" y="559.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (28 samples, 0.04%)</title><rect x="97.9941%" y="533" width="0.0429%" height="15" fill="rgb(229,68,48)"/><text x="98.2441%" y="543.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (28 samples, 0.04%)</title><rect x="98.0477%" y="517" width="0.0429%" height="15" fill="rgb(252,8,32)"/><text x="98.2977%" y="527.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (24 samples, 0.04%)</title><rect x="98.1014%" y="501" width="0.0368%" height="15" fill="rgb(223,20,43)"/><text x="98.3514%" y="511.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (16 samples, 0.02%)</title><rect x="98.1427%" y="485" width="0.0245%" height="15" fill="rgb(229,81,49)"/><text x="98.3927%" y="495.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (25 samples, 0.04%)</title><rect x="98.1672%" y="469" width="0.0383%" height="15" fill="rgb(236,28,36)"/><text x="98.4172%" y="479.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (10 samples, 0.02%)</title><rect x="98.2102%" y="453" width="0.0153%" height="15" fill="rgb(249,185,26)"/><text x="98.4602%" y="463.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (9 samples, 0.01%)</title><rect x="98.2270%" y="437" width="0.0138%" height="15" fill="rgb(249,174,33)"/><text x="98.4770%" y="447.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (14 samples, 0.02%)</title><rect x="98.2469%" y="421" width="0.0215%" height="15" fill="rgb(233,201,37)"/><text x="98.4969%" y="431.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (8 samples, 0.01%)</title><rect x="98.2760%" y="389" width="0.0123%" height="15" fill="rgb(221,78,26)"/><text x="98.5260%" y="399.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (20 samples, 0.03%)</title><rect x="98.2883%" y="373" width="0.0306%" height="15" fill="rgb(250,127,30)"/><text x="98.5383%" y="383.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (7 samples, 0.01%)</title><rect x="98.3649%" y="261" width="0.0107%" height="15" fill="rgb(230,49,44)"/><text x="98.6149%" y="271.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (7 samples, 0.01%)</title><rect x="98.4063%" y="181" width="0.0107%" height="15" fill="rgb(229,67,23)"/><text x="98.6563%" y="191.50"></text></g><g><title>ray-tracing-weekend`&lt;ray_tracing_weekend::sphere::Sphere&lt;M&gt; as ray_tracing_weekend::hittable::Hittable&gt;::hit (7 samples, 0.01%)</title><rect x="98.4293%" y="117" width="0.0107%" height="15" fill="rgb(249,83,47)"/><text x="98.6793%" y="127.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (3,491 samples, 5.35%)</title><rect x="93.1164%" y="693" width="5.3496%" height="15" fill="rgb(215,43,3)"/><text x="93.3664%" y="703.50">ray-tra..</text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (2,147 samples, 3.29%)</title><rect x="95.1760%" y="677" width="3.2901%" height="15" fill="rgb(238,154,13)"/><text x="95.4260%" y="687.50">ray..</text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (1,439 samples, 2.21%)</title><rect x="96.2609%" y="661" width="2.2051%" height="15" fill="rgb(219,56,2)"/><text x="96.5109%" y="671.50">r..</text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (1,020 samples, 1.56%)</title><rect x="96.9030%" y="645" width="1.5631%" height="15" fill="rgb(233,0,4)"/><text x="97.1530%" y="655.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (787 samples, 1.21%)</title><rect x="97.2601%" y="629" width="1.2060%" height="15" fill="rgb(235,30,7)"/><text x="97.5101%" y="639.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (626 samples, 0.96%)</title><rect x="97.5068%" y="613" width="0.9593%" height="15" fill="rgb(250,79,13)"/><text x="97.7568%" y="623.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (516 samples, 0.79%)</title><rect x="97.6753%" y="597" width="0.7907%" height="15" fill="rgb(211,146,34)"/><text x="97.9253%" y="607.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (437 samples, 0.67%)</title><rect x="97.7964%" y="581" width="0.6697%" height="15" fill="rgb(228,22,38)"/><text x="98.0464%" y="591.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (363 samples, 0.56%)</title><rect x="97.9098%" y="565" width="0.5563%" height="15" fill="rgb(235,168,5)"/><text x="98.1598%" y="575.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (313 samples, 0.48%)</title><rect x="97.9864%" y="549" width="0.4796%" height="15" fill="rgb(221,155,16)"/><text x="98.2364%" y="559.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (280 samples, 0.43%)</title><rect x="98.0370%" y="533" width="0.4291%" height="15" fill="rgb(215,215,53)"/><text x="98.2870%" y="543.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (245 samples, 0.38%)</title><rect x="98.0906%" y="517" width="0.3754%" height="15" fill="rgb(223,4,10)"/><text x="98.3406%" y="527.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (214 samples, 0.33%)</title><rect x="98.1381%" y="501" width="0.3279%" height="15" fill="rgb(234,103,6)"/><text x="98.3881%" y="511.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (195 samples, 0.30%)</title><rect x="98.1672%" y="485" width="0.2988%" height="15" fill="rgb(227,97,0)"/><text x="98.4172%" y="495.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (170 samples, 0.26%)</title><rect x="98.2056%" y="469" width="0.2605%" height="15" fill="rgb(234,150,53)"/><text x="98.4556%" y="479.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (157 samples, 0.24%)</title><rect x="98.2255%" y="453" width="0.2406%" height="15" fill="rgb(228,201,54)"/><text x="98.4755%" y="463.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (147 samples, 0.23%)</title><rect x="98.2408%" y="437" width="0.2253%" height="15" fill="rgb(222,22,37)"/><text x="98.4908%" y="447.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (129 samples, 0.20%)</title><rect x="98.2684%" y="421" width="0.1977%" height="15" fill="rgb(237,53,32)"/><text x="98.5184%" y="431.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (125 samples, 0.19%)</title><rect x="98.2745%" y="405" width="0.1916%" height="15" fill="rgb(233,25,53)"/><text x="98.5245%" y="415.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (116 samples, 0.18%)</title><rect x="98.2883%" y="389" width="0.1778%" height="15" fill="rgb(210,40,34)"/><text x="98.5383%" y="399.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (96 samples, 0.15%)</title><rect x="98.3190%" y="373" width="0.1471%" height="15" fill="rgb(241,220,44)"/><text x="98.5690%" y="383.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (89 samples, 0.14%)</title><rect x="98.3297%" y="357" width="0.1364%" height="15" fill="rgb(235,28,35)"/><text x="98.5797%" y="367.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (84 samples, 0.13%)</title><rect x="98.3373%" y="341" width="0.1287%" height="15" fill="rgb(210,56,17)"/><text x="98.5873%" y="351.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (79 samples, 0.12%)</title><rect x="98.3450%" y="325" width="0.1211%" height="15" fill="rgb(224,130,29)"/><text x="98.5950%" y="335.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (72 samples, 0.11%)</title><rect x="98.3557%" y="309" width="0.1103%" height="15" fill="rgb(235,212,8)"/><text x="98.6057%" y="319.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (67 samples, 0.10%)</title><rect x="98.3634%" y="293" width="0.1027%" height="15" fill="rgb(223,33,50)"/><text x="98.6134%" y="303.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (67 samples, 0.10%)</title><rect x="98.3634%" y="277" width="0.1027%" height="15" fill="rgb(219,149,13)"/><text x="98.6134%" y="287.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (59 samples, 0.09%)</title><rect x="98.3757%" y="261" width="0.0904%" height="15" fill="rgb(250,156,29)"/><text x="98.6257%" y="271.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (53 samples, 0.08%)</title><rect x="98.3848%" y="245" width="0.0812%" height="15" fill="rgb(216,193,19)"/><text x="98.6348%" y="255.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (49 samples, 0.08%)</title><rect x="98.3910%" y="229" width="0.0751%" height="15" fill="rgb(216,135,14)"/><text x="98.6410%" y="239.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (42 samples, 0.06%)</title><rect x="98.4017%" y="213" width="0.0644%" height="15" fill="rgb(241,47,5)"/><text x="98.6517%" y="223.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (39 samples, 0.06%)</title><rect x="98.4063%" y="197" width="0.0598%" height="15" fill="rgb(233,42,35)"/><text x="98.6563%" y="207.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (32 samples, 0.05%)</title><rect x="98.4170%" y="181" width="0.0490%" height="15" fill="rgb(231,13,6)"/><text x="98.6670%" y="191.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (29 samples, 0.04%)</title><rect x="98.4216%" y="165" width="0.0444%" height="15" fill="rgb(207,181,40)"/><text x="98.6716%" y="175.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (26 samples, 0.04%)</title><rect x="98.4262%" y="149" width="0.0398%" height="15" fill="rgb(254,173,49)"/><text x="98.6762%" y="159.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (25 samples, 0.04%)</title><rect x="98.4278%" y="133" width="0.0383%" height="15" fill="rgb(221,1,38)"/><text x="98.6778%" y="143.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (17 samples, 0.03%)</title><rect x="98.4400%" y="117" width="0.0261%" height="15" fill="rgb(206,124,46)"/><text x="98.6900%" y="127.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (15 samples, 0.02%)</title><rect x="98.4431%" y="101" width="0.0230%" height="15" fill="rgb(249,21,11)"/><text x="98.6931%" y="111.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (15 samples, 0.02%)</title><rect x="98.4431%" y="85" width="0.0230%" height="15" fill="rgb(222,201,40)"/><text x="98.6931%" y="95.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (13 samples, 0.02%)</title><rect x="98.4461%" y="69" width="0.0199%" height="15" fill="rgb(235,61,29)"/><text x="98.6961%" y="79.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (10 samples, 0.02%)</title><rect x="98.4507%" y="53" width="0.0153%" height="15" fill="rgb(219,207,3)"/><text x="98.7007%" y="63.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (7 samples, 0.01%)</title><rect x="98.4553%" y="37" width="0.0107%" height="15" fill="rgb(222,56,46)"/><text x="98.7053%" y="47.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (11,556 samples, 17.71%)</title><rect x="80.7592%" y="725" width="17.7084%" height="15" fill="rgb(239,76,54)"/><text x="81.0092%" y="735.50">ray-tracing-weekend`ray_trac..</text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (5,917 samples, 9.07%)</title><rect x="89.4004%" y="709" width="9.0672%" height="15" fill="rgb(231,124,27)"/><text x="89.6504%" y="719.50">ray-tracing-w..</text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (39,325 samples, 60.26%)</title><rect x="38.2135%" y="757" width="60.2617%" height="15" fill="rgb(249,195,6)"/><text x="38.4635%" y="767.50">ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color</text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (18,739 samples, 28.72%)</title><rect x="69.7596%" y="741" width="28.7157%" height="15" fill="rgb(237,174,47)"/><text x="70.0096%" y="751.50">ray-tracing-weekend`ray_tracing_weekend::ray::..</text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color (62,182 samples, 95.29%)</title><rect x="3.1920%" y="773" width="95.2879%" height="15" fill="rgb(206,201,31)"/><text x="3.4420%" y="783.50">ray-tracing-weekend`ray_tracing_weekend::ray::Ray::color</text></g><g><title>libsystem_kernel.dylib`getentropy (53 samples, 0.08%)</title><rect x="98.7756%" y="725" width="0.0812%" height="15" fill="rgb(231,57,52)"/><text x="99.0256%" y="735.50"></text></g><g><title>ray-tracing-weekend`rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed_and_generate (57 samples, 0.09%)</title><rect x="98.7741%" y="741" width="0.0873%" height="15" fill="rgb(248,177,22)"/><text x="99.0241%" y="751.50"></text></g><g><title>ray-tracing-weekend`rand_chacha::guts::refill_wide (10 samples, 0.02%)</title><rect x="98.8614%" y="741" width="0.0153%" height="15" fill="rgb(215,211,37)"/><text x="99.1114%" y="751.50"></text></g><g><title>ray-tracing-weekend`rand::rng::Rng::gen (192 samples, 0.29%)</title><rect x="98.7189%" y="757" width="0.2942%" height="15" fill="rgb(241,128,51)"/><text x="98.9689%" y="767.50"></text></g><g><title>ray-tracing-weekend`rand_chacha::guts::refill_wide::impl_avx2 (89 samples, 0.14%)</title><rect x="98.8767%" y="741" width="0.1364%" height="15" fill="rgb(227,165,31)"/><text x="99.1267%" y="751.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::vec3::Vec3::random_in_unit_sphere (353 samples, 0.54%)</title><rect x="98.4799%" y="773" width="0.5409%" height="15" fill="rgb(228,167,24)"/><text x="98.7299%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`write (580 samples, 0.89%)</title><rect x="99.0790%" y="725" width="0.8888%" height="15" fill="rgb(228,143,12)"/><text x="99.3290%" y="735.50"></text></g><g><title>ray-tracing-weekend`&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (605 samples, 0.93%)</title><rect x="99.0484%" y="741" width="0.9271%" height="15" fill="rgb(249,149,8)"/><text x="99.2984%" y="751.50"></text></g><g><title>ray-tracing-weekend`ray_tracing_weekend::main (65,183 samples, 99.89%)</title><rect x="0.0981%" y="789" width="99.8866%" height="15" fill="rgb(243,35,44)"/><text x="0.3481%" y="799.50">ray-tracing-weekend`ray_tracing_weekend::main</text></g><g><title>ray-tracing-weekend`std::io::stdio::_print (629 samples, 0.96%)</title><rect x="99.0208%" y="773" width="0.9639%" height="15" fill="rgb(246,89,9)"/><text x="99.2708%" y="783.50"></text></g><g><title>ray-tracing-weekend`core::fmt::write (612 samples, 0.94%)</title><rect x="99.0468%" y="757" width="0.9378%" height="15" fill="rgb(233,213,13)"/><text x="99.2968%" y="767.50"></text></g><g><title>all (65,257 samples, 100%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(233,141,41)"/><text x="0.2500%" y="879.50"></text></g><g><title>ray-tracing-weekend`0x1 (65,257 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(239,167,4)"/><text x="0.2500%" y="863.50">ray-tracing-weekend`0x1</text></g><g><title>libdyld.dylib`start (65,256 samples, 100.00%)</title><rect x="0.0015%" y="837" width="99.9985%" height="15" fill="rgb(209,217,16)"/><text x="0.2515%" y="847.50">libdyld.dylib`start</text></g><g><title>ray-tracing-weekend`main (65,256 samples, 100.00%)</title><rect x="0.0015%" y="821" width="99.9985%" height="15" fill="rgb(219,88,35)"/><text x="0.2515%" y="831.50">ray-tracing-weekend`main</text></g><g><title>ray-tracing-weekend`std::sys_common::backtrace::__rust_begin_short_backtrace (65,256 samples, 100.00%)</title><rect x="0.0015%" y="805" width="99.9985%" height="15" fill="rgb(220,193,23)"/><text x="0.2515%" y="815.50">ray-tracing-weekend`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g></svg></svg>